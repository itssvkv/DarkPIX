package com.itssvkv.darkpix.ui.home.adapterimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport com.itssvkv.darkpix.Rimport com.itssvkv.darkpix.databinding.RecCategoryBindingimport com.itssvkv.darkpix.models.adaptersdata.CategoryDataimport javax.inject.Injectclass CategoryAdapter @Inject constructor() :    ListAdapter<CategoryData, CategoryAdapter.ViewHolder>(Comparator) {    var onCategoryItemClicked: ((CategoryData) -> Unit)? = null    inner class ViewHolder(private val binding: RecCategoryBinding) :        RecyclerView.ViewHolder(binding.root) {        fun bind(item: CategoryData) {            binding.recShapeableImageView.setImageResource(item.image)            binding.recKindTv.text = item.kind            binding.root.setOnClickListener {                onCategoryItemClicked?.invoke(item)            }        }        fun setBackground(position: Int) {            when (position % 3) {                0 -> binding.recKindTv.setBackgroundResource(R.drawable.rec_popular_bg)                1 -> binding.recKindTv.setBackgroundResource(R.drawable.rec_natural_bg)                2 -> binding.recKindTv.setBackgroundResource(R.drawable.rec_fashion_bg)            }        }    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {        val binding = RecCategoryBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return ViewHolder(binding)    }    override fun onBindViewHolder(holder: ViewHolder, position: Int) {        val item = getItem(position)        item.let {            holder.bind(item)        }        holder.setBackground(position)    }    private object Comparator : DiffUtil.ItemCallback<CategoryData>() {        override fun areItemsTheSame(oldItem: CategoryData, newItem: CategoryData) =            oldItem.kind == newItem.kind        override fun areContentsTheSame(oldItem: CategoryData, newItem: CategoryData) =            oldItem == newItem    }}