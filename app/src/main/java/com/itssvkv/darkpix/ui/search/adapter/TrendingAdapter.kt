package com.itssvkv.darkpix.ui.search.adapterimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport com.itssvkv.darkpix.databinding.RecTrendingBindingimport com.itssvkv.darkpix.models.adaptersdata.TrendingDataimport javax.inject.Injectclass TrendingAdapter @Inject constructor() : ListAdapter<TrendingData, TrendingAdapter.TrendingViewHolder>(Comparator) {    var onTrendingItemClicked: ((TrendingData) -> Unit)? = null    inner class TrendingViewHolder(val binding: RecTrendingBinding) :        RecyclerView.ViewHolder(binding.root) {        fun bind(item: TrendingData) {            binding.recTrendingTv.text = item.searchText        }    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): TrendingViewHolder {        val binding = RecTrendingBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return TrendingViewHolder(binding)    }    override fun onBindViewHolder(holder: TrendingViewHolder, position: Int) {        val item = getItem(position)        item.let {            holder.bind(it)        }        holder.itemView.setOnClickListener {            onTrendingItemClicked?.invoke(item)        }    }    private object Comparator : DiffUtil.ItemCallback<TrendingData>() {        override fun areItemsTheSame(oldItem: TrendingData, newItem: TrendingData) =            oldItem.searchText == newItem.searchText        override fun areContentsTheSame(oldItem: TrendingData, newItem: TrendingData) =            oldItem == newItem    }}